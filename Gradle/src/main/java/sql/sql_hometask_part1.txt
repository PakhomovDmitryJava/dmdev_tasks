/**
  Создать базу данных книг. Подключиться к базе данных.
          Создать таблицу для хранения данных о книгах со следующими полями:
          - идентификатор (id)
          - название
          - год издания
          - количество страниц
          - id автора
          Создать таблицу авторов книг со следующими полями:
          - идентификатор (id)
          - имя
          - фамилия
  Сделать первичным ключом каждой таблицы идентификатор.
Добавить идентификаторам авто-инкрементирование.
В таблице книг сделать внешний ключ на таблицу авторов (поле id автора)
 Заполнить таблицу авторов данными (5+ записей)
Заполнить таблицу книг данными (10+ записей)

  */


create table author
(
    id        serial primary key,
    fist_name varchar(128) not null,
    last_name varchar(128) not null
);
create table book
(
    id        bigserial primary key,
    name      varchar(128) not null,
    year      smallint     not null,
    pages     smallint     not null,
    author_id int references author (id)
);

insert into author (fist_name, last_name)
values ('Key', 'Horstman'),
       ('Steave', 'Kovi'),
       ('Lev', 'Tolstoy'),
       ('Venedikt', 'Erofeev'),
       ('Victor', 'Pelevin'),
       ('Lui Ferdinand', 'Celin');

update author
set fist_name = 'Louis-Ferdinand'
where id = 6;

select *
from author;

insert into book (name, year, pages, author_id)
values ('Java', 1999, 800, (select id from author where fist_name = 'Key')),
       ('C++ for dumb', 1988, 1000, 2),
       ('War and Peace', 1867, 1200, 3),
       ('Moscow - Petushki', 1997, 400, 4),
       ('Generation P', 1990, 500, 5),
       ('Death on Credit', 1936, 450, 6);

insert into book (name, year, pages, author_id)
values ('Empire V', 2000, 478, 5);

insert into author (fist_name, last_name)
VALUES ('Steave', 'Kovi');


-- Написать запрос, выбирающий: название книги, год и имя автора,
--   отсортированные по году издания книги в возрастающем порядке.
-- Написать тот же запрос, но для убывающего порядка.

select b.name,
       b.year,
       (select a.fist_name from author a where a.id = b.author_id)
from book b
order by b.year;

select b.name,
       b.year,
       (select a.fist_name from author a where a.id = b.author_id)
from book b
order by b.year desc;

-- Написать запрос, выбирающий количество книг у заданного автора.
select count(*)
from book
where author_id = 5;

-- Написать запрос, выбирающий книги, у которых количество страниц больше среднего количества страниц по всем книгам
select *
from book
where book.pages > (select avg(pages) from book);
-- Написать запрос, выбирающий 5 самых старых книг
select *
from book
order by year
limit 5;
-- Дополнить запрос и посчитать суммарное количество страниц среди этих книг
select sum(pages)
from (select *
      from book
      order by year
      limit 5) p;
-- Написать запрос, изменяющий количество страниц у одной из книг
update book
set pages = 777
where book.id = 1;
-- Написать запрос, удаляющий автора, который написал самую большую книгу
delete
from book
where author_id = (select author_id from book where pages = (select max(pages) from book));
delete
from author
where id = (select author_id
            from book
            where pages = (select max(pages) from book));