create database company_repository;
create schema company_storage;
drop table company_storage.company;
create table company_storage.company
(
    id   int primary key generated by default as identity,
    name varchar(128) unique not null,
    date date                not null check ( date > '1995-01-01' and date < '2020-01-01' )

);
insert into company_storage.company(name, date)
values ('Google', '2001-01-01'),
       ('Apple', '2002-10-29'),
       ('Microsoft', '2005-01-02'),
       ('Somecompany', '1999-01-02');

drop table company_storage.employee;
create table company_storage.employee
(
    id         serial primary key,
    first_name varchar(128) not null,
    last_name  varchar(128) not null,
    company_id int references company_storage.company (id) on delete cascade ,
    salary     int,
    unique (first_name, last_name),
    foreign key (company_id) references company_storage.company
);
insert into company_storage.employee (first_name, last_name, salary, company_id)
values ('Ivan', 'Ivanov', 1000, 1),
       ('Petr', 'Petrov', 2000, 3),
       ('Dima', 'Dimov', 3000, 2),
       ('Arni', 'Paramonov', null, 2),
       ('Ivan', 'Ivanov33', 1000, 1),
       ('Petr', 'Petrov1', 2000, 3),
       ('Dima', 'Dimov2', 3000, 2);

--union
select first_name
from company_storage.employee
where employee.company_id is not null
union
select first_name
from company_storage.employee
where employee.salary is null;

-- under select
select avg(empl.salary)
from (select *
      from company_storage.employee
      where salary is not null
      order by salary desc
      limit 2) empl;

select *,
       (select avg(salary) from company_storage.employee) avg,
       (select max(salary) from company_storage.employee) max
from company_storage.employee;

select *,
       (select max(salary) from company_storage.employee) - salary diff
from company_storage.employee;


--sum, avg, max, min count
select upper(first_name),
       concat(first_name, ' ', last_name) fio
from company_storage.employee;

select sum(salary)
from company_storage.employee;

select count(*) as RICH_PEOPLE
from company_storage.employee
where salary > 2000 ;

select avg(salary)
from company_storage.employee;

select id,
       first_name,
       last_name,
       salary
from company_storage.employee
where salary in (1000, 2000)
   or first_name like 'Iv%'
order by first_name, salary desc;

--delete
delete
from company_storage.employee
where salary is null;

delete from company_storage.employee
where salary = (select max(salary) from  company_storage.employee);

select * from company_storage.company;
select * from company_storage.employee;

delete from company_storage.company where id = 1;

update company_storage.employee
set company_id = 2,
    salary = 1700
where id = 10;

--inner join
-- cross join
-- left outer join
-- right outer join
-- full outer join
select company_storage.company.name,
       company_storage.employee.first_name || ' ' || company_storage.employee.last_name fio
from company_storage.company,
     company_storage.employee
where company_storage.employee.company_id = company.id;

select c.name,
       company_storage.employee.first_name || ' ' || company_storage.employee.last_name fio
from company_storage.employee
         join company_storage.company c
              on company_storage.employee.company_id = c.id;

select c.name, e.first_name
from company_storage.company c
         left join company_storage.employee e on c.id = e.company_id;

select c.name, e.first_name
from company_storage.employee e
         left join company_storage.company c on e.company_id = c.id;

select c.name, e.first_name
from company_storage.company c
         right join company_storage.employee e on c.id = e.company_id;

select c.name, e.first_name
from company_storage.company c
         full join company_storage.employee e on c.id = e.company_id;

select company_storage.company.name, count(e.id)
from company_storage.company
         left join company_storage.employee e
                   on company.id = e.company_id
-- where company.name = 'Apple'
group by company_storage.company.id
having count(e.id) > 1;

--Window functions
select c.name,
       e.last_name,
       count(e.id) over (),
       max(e.salary) over (),
       avg(e.salary) over (),
       row_number() over (),
       rank() over (order by e.salary),
       dense_rank() over (order by e.salary),
       lag(e.salary) over (order by e.salary)
from company_storage.company c
         left join company_storage.employee e
                   on c.id = e.company_id;

--View
create view company_storage.employee_view as
select c.name,
       e.last_name,
       count(e.id) over (),
       max(e.salary) over (),
       avg(e.salary) over (),
       row_number() over (),
       rank() over (order by e.salary),
       dense_rank() over (order by e.salary),
       lag(e.salary) over (order by e.salary)
from company_storage.company c
         left join company_storage.employee e
                   on c.id = e.company_id;

select *
from company_storage.employee_view
where name = 'Apple';

create materialized view company_storage.m_employee_view as
select c.name,
       e.last_name,
       count(e.id) over (),
       max(e.salary) over (),
       avg(e.salary) over (),
       row_number() over (),
       rank() over (order by e.salary),
       dense_rank() over (order by e.salary),
       lag(e.salary) over (order by e.salary)
from company_storage.company c
         left join company_storage.employee e
                   on c.id = e.company_id;

select *
from company_storage.m_employee_view
where max = 3000;

insert into company_storage.employee (first_name, last_name, company_id, salary)
values ('Dima', 'Pakhomov', 1, 1340);

select *
from company_storage.employee_view;

select *
from company_storage.m_employee_view;

refresh materialized view company_storage.m_employee_view;

select *
from company_storage.m_employee_view;

--alter
alter table if exists company_storage.employee
    add column gender int;

alter table if exists company_storage.employee
    alter column gender set not null;

select *
from company_storage.employee;

update company_storage.employee
set gender = 1
where id > 5;

update company_storage.employee
set gender = 2
where id <= 5;

alter table if exists company_storage.employee
    alter column gender set not null;
